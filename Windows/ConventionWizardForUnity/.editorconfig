# FNS Client Linter Setting 
# FNS Client Team Lint Wizard v1.0.5 (2024.04.17 버전)

# 상위 디렉터리에서 .editorconfig 설정을 상속하려면 아래 행을 제거하세요.
root = true

[*]
charset = utf-8
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_style_allow_multiple_blank_lines_experimental = false:error
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_field = false:silent
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_operator_placement_when_wrapping = beginning_of_line

# C# 파일
[*.cs]

#### 코어 EditorConfig 옵션 ####

# 들여쓰기 및 간격
indent_size = 4
indent_style = space
tab_width = 4

# 새 줄 기본 설정
end_of_line = crlf
insert_final_newline = false

#### .NET 코딩 규칙 ####

# Using 구성
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this. 및 Me. 기본 설정
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# 언어 키워드 및 BCL 형식 기본 설정
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# 괄호 기본 설정
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# 한정자 기본 설정
dotnet_style_require_accessibility_modifiers = always

# 식 수준 기본 설정
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# 필드 기본 설정
dotnet_style_readonly_field = true

# 매개 변수 기본 설정
dotnet_code_quality_unused_parameters = all

# 비표시 오류(Suppression) 기본 설정
dotnet_remove_unnecessary_suppression_exclusions = none

# 새 줄 기본 설정
dotnet_style_allow_multiple_blank_lines_experimental = false:error
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C# 코딩 규칙 ####

# var 기본 설정
csharp_style_var_elsewhere = true:silent
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = true:silent

# 네임스페이스
csharp_style_namespace_declarations = block_scoped

# 식 본문 멤버
csharp_style_expression_bodied_accessors = when_on_signle_line:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = when_on_signle_line:silent
csharp_style_expression_bodied_local_functions = when_on_signle_line:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# 패턴 일치 기본 설정
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = false
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_method_group_conversion = true

# foreach 설정
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed

# Null 검사 기본 설정
csharp_style_conditional_delegate_call = true:suggestion

# 한정자 기본 설정
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# 코드 블록 기본 설정
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = true

# 식 수준 기본 설정
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = false:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = false:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_prefer_readonly_struct = true:suggestion

# 'using' 지시문 기본 설정
csharp_using_directive_placement = outside_namespace:silent

# 새 줄 기본 설정
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:error
csharp_style_allow_embedded_statements_on_same_line_experimental = false:silent

#### C# 서식 설정 규칙 ####

# 새 줄 기본 설정
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# 들여쓰기 기본 설정
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = false
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = false

# 공간 기본 설정
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# 기본 설정 래핑
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### 명명 스타일 ####

##########################################
# Styles
##########################################

# camel_case_style - Define the camelCase style
dotnet_naming_style.camel_case_style.capitalization = camel_case
# pascal_case_style - Define the PascalCase style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
# first_upper_style - The first character must start with an upper-case character
dotnet_naming_style.first_upper_style.capitalization = first_word_upper
# prefix_interface_with_i_style - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_with_i_style.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i_style.required_prefix = I
# prefix_type_parameters_with_t_style - Generic Type Parameters must be PascalCase and the first character must be a 'T'
dotnet_naming_style.prefix_type_parameters_with_t_style.capitalization = pascal_case
dotnet_naming_style.prefix_type_parameters_with_t_style.required_prefix = T
# disallowed_style - Anything that has this style applied is marked as disallowed
dotnet_naming_style.disallowed_style.capitalization  = pascal_case
dotnet_naming_style.disallowed_style.required_prefix =
dotnet_naming_style.disallowed_style.required_suffix =
# enum_case_style
dotnet_naming_style.screaming_snake.required_prefix = 
dotnet_naming_style.screaming_snake.required_suffix = 
dotnet_naming_style.screaming_snake.word_separator = _
dotnet_naming_style.screaming_snake.capitalization = all_upper
# internal_error_style - This style should never occur... if it does, it indicates a bug in file or in the parser using the file
dotnet_naming_style.internal_error_style.capitalization  = pascal_case
dotnet_naming_style.internal_error_style.required_prefix =
dotnet_naming_style.internal_error_style.required_suffix =

##########################################
# .NET Design Guideline Field Naming Rules
# Naming rules for fields follow the .NET Framework design guidelines
# https://docs.microsoft.com/dotnet/standard/design-guidelines/index
##########################################

# All public/protected/protected_internal constant fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_constant_fields_group.required_modifiers         = const
dotnet_naming_symbols.public_protected_constant_fields_group.applicable_kinds           = field
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.symbols    = public_protected_constant_fields_group
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.public_protected_constant_fields_must_be_pascal_case_rule.severity = warning

# All public/protected/protected_internal static readonly fields must be PascalCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_protected_static_readonly_fields_group.required_modifiers         = static, readonly
dotnet_naming_symbols.public_protected_static_readonly_fields_group.applicable_kinds           = field
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.symbols    = public_protected_static_readonly_fields_group
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.public_protected_static_readonly_fields_must_be_pascal_case_rule.severity = warning

# No other public/protected/protected_internal fields are allowed
# https://docs.microsoft.com/dotnet/standard/design-guidelines/field
dotnet_naming_symbols.other_public_protected_fields_group.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.other_public_protected_fields_group.applicable_kinds           = field
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.symbols             = other_public_protected_fields_group
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.style = disallowed_style
dotnet_naming_rule.other_public_protected_fields_disallowed_rule.severity = error

##########################################
# StyleCop Field Naming Rules
# Naming rules for fields follow the StyleCop analyzers
# This does not override any rules using disallowed_style above
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers
##########################################

# All constant fields must be PascalCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1303.md
dotnet_naming_symbols.stylecop_constant_fields_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected, private
dotnet_naming_symbols.stylecop_constant_fields_group.required_modifiers         = const
dotnet_naming_symbols.stylecop_constant_fields_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.symbols    = stylecop_constant_fields_group
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.stylecop_constant_fields_must_be_pascal_case_rule.severity = warning

# All static readonly fields must be PascalCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1311.md
dotnet_naming_symbols.stylecop_static_readonly_fields_group.applicable_accessibilities = public
dotnet_naming_symbols.stylecop_static_readonly_fields_group.required_modifiers         = readonly
dotnet_naming_symbols.stylecop_static_readonly_fields_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.symbols    = stylecop_static_readonly_fields_group
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.style = disallowed_style
dotnet_naming_rule.stylecop_static_readonly_fields_must_be_pascal_case_rule.severity = warning

# No non-private instance fields are allowed
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_accessibilities = public, internal, protected_internal, protected, private_protected
dotnet_naming_symbols.stylecop_fields_must_be_private_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.symbols               = stylecop_fields_must_be_private_group
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.style = disallowed_style
dotnet_naming_rule.stylecop_instance_fields_must_be_private_rule.severity = error

# Private fields must be camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md
dotnet_naming_symbols.stylecop_private_fields_group.applicable_accessibilities = private
dotnet_naming_symbols.stylecop_private_fields_group.applicable_kinds           = field
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.symbols     = stylecop_private_fields_group
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.stylecop_private_fields_must_be_camel_case_rule.severity = warning

# Local variables must be camelCase
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md
dotnet_naming_symbols.stylecop_local_fields_group.applicable_accessibilities = local
dotnet_naming_symbols.stylecop_local_fields_group.applicable_kinds           = local
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.symbols     = stylecop_local_fields_group
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.style = camel_case_style
dotnet_naming_rule.stylecop_local_fields_must_be_camel_case_rule.severity = silent

# This rule should never fire.  However, it's included for at least two purposes:
# First, it helps to understand, reason about, and root-case certain types of issues, such as bugs in .editorconfig parsers.
# Second, it helps to raise immediate awareness if a new field type is added (as occurred recently in C#).
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_accessibilities = *
dotnet_naming_symbols.sanity_check_uncovered_field_case_group.applicable_kinds           = field
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.symbols  = sanity_check_uncovered_field_case_group
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.style = disallowed_style
dotnet_naming_rule.sanity_check_uncovered_field_case_rule.severity = error

##########################################
# Other Naming Rules
##########################################

# All of the following must be PascalCase:
# - Namespaces
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-namespaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Classes and Enumerations
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
#   https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
# - Delegates
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces#names-of-common-types
# - Constructors, Properties, Events, Methods
#   https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-type-members

dotnet_naming_symbols.element_group.applicable_kinds = namespace, class, enum, struct, delegate, event, method, property
dotnet_naming_rule.element_rule.symbols              = element_group
dotnet_naming_rule.element_rule.style = disallowed_style
dotnet_naming_rule.element_rule.severity = warning

# Interfaces use PascalCase and are prefixed with uppercase 'I'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.interface_group.applicable_kinds = interface
dotnet_naming_rule.interface_rule.symbols              = interface_group
dotnet_naming_rule.interface_rule.style = prefix_interface_with_i_style
dotnet_naming_rule.interface_rule.severity = warning

# Generics Type Parameters use PascalCase and are prefixed with uppercase 'T'
# https://docs.microsoft.com/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces
dotnet_naming_symbols.type_parameter_group.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameter_rule.symbols              = type_parameter_group
dotnet_naming_rule.type_parameter_rule.style = prefix_type_parameters_with_t_style
dotnet_naming_rule.type_parameter_rule.severity = warning

# Function parameters use camelCase
# https://docs.microsoft.com/dotnet/standard/design-guidelines/naming-parameters
dotnet_naming_symbols.parameters_group.applicable_kinds = parameter
dotnet_naming_rule.parameters_rule.symbols              = parameters_group
dotnet_naming_rule.parameters_rule.style = camel_case_style
dotnet_naming_rule.parameters_rule.severity = warning

dotnet_naming_symbols.enum.applicable_kinds = enum
dotnet_naming_symbols.enum.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum.required_modifiers = 
dotnet_naming_rule.enum_should_be_screaming_snake.severity = error
dotnet_naming_rule.enum_should_be_screaming_snake.symbols = enum
dotnet_naming_rule.enum_should_be_screaming_snake.style = screaming_snake


# ===============================================================================================================================
#
#  Visual studio 코드 컨벤션 규칙
#  ------------------------------------------------------------------------------------------------------------------------------
#  2023-10-30. @Andrew 작성
#
# ===============================================================================================================================
#  코드 최대 줄 수는 130줄까지
# ===============================================================================================================================
guidelines = 130
guidelines_style = 1.2px dashed 30FFFFFF

# ===============================================================================================================================
#  Error : 위반이 빌드 ‘오류’로 표시되고 빌드가 실패합니다.
# ===============================================================================================================================
dotnet_diagnostic.IDE0011.severity = error
dotnet_diagnostic.IDE0018.severity = error
dotnet_diagnostic.IDE0019.severity = error
dotnet_diagnostic.IDE0029.severity = error
dotnet_diagnostic.IDE0030.severity = error
dotnet_diagnostic.IDE0031.severity = error
dotnet_diagnostic.IDE0031.severity = error
dotnet_diagnostic.IDE0034.severity = error
dotnet_diagnostic.IDE0035.severity = error
dotnet_diagnostic.IDE0036.severity = error
dotnet_diagnostic.IDE0039.severity = error
dotnet_diagnostic.IDE0040.severity = error
dotnet_diagnostic.IDE0041.severity = error
dotnet_diagnostic.IDE0042.severity = error
dotnet_diagnostic.IDE0049.severity = error
dotnet_diagnostic.IDE0053.severity = error
dotnet_diagnostic.IDE0061.severity = error
dotnet_diagnostic.IDE0065.severity = error
dotnet_diagnostic.IDE0066.severity = error
dotnet_diagnostic.IDE0070.severity = error
dotnet_diagnostic.IDE0071.severity = error
dotnet_diagnostic.IDE0072.severity = error
dotnet_diagnostic.IDE0072.severity = error
dotnet_diagnostic.IDE0081.severity = error
dotnet_diagnostic.IDE0090.severity = error
dotnet_diagnostic.IDE0161.severity = error
dotnet_diagnostic.IDE0200.severity = error
dotnet_diagnostic.IDE0220.severity = error
dotnet_diagnostic.IDE0250.severity = error
dotnet_diagnostic.IDE0280.severity = error
dotnet_diagnostic.IDE1005.severity = error
dotnet_diagnostic.IDE1006.severity = error

# ===============================================================================================================================
#  warning : 위반이 빌드 ‘경고’로 표시되지만 빌드가 실패하지 않습니다(경고를 오류로 처리하도록 설정하지 않은 경우).
# ===============================================================================================================================
dotnet_diagnostic.IDE0005.severity = warning
dotnet_diagnostic.IDE0019.severity = warning
dotnet_diagnostic.IDE0028.severity = warning
dotnet_diagnostic.IDE0046.severity = warning
dotnet_diagnostic.IDE0051.severity = warning
dotnet_diagnostic.IDE0063.severity = warning
dotnet_diagnostic.IDE0080.severity = warning
dotnet_diagnostic.IDE0083.severity = warning
dotnet_diagnostic.IDE0180.severity = warning

# ===============================================================================================================================
#  suggestion : 위반이 빌드 ‘메시지’로 표시되고 Visual Studio IDE에서 제안 사항으로 표시됩니다.
# ===============================================================================================================================
dotnet_diagnostic.IDE0007.severity = suggestion
dotnet_diagnostic.IDE0017.severity = suggestion
dotnet_diagnostic.IDE0021.severity = suggestion
dotnet_diagnostic.IDE0022.severity = suggestion
dotnet_diagnostic.IDE0023.severity = suggestion
dotnet_diagnostic.IDE0024.severity = suggestion
dotnet_diagnostic.IDE0025.severity = suggestion
dotnet_diagnostic.IDE0026.severity = suggestion
dotnet_diagnostic.IDE0027.severity = suggestion
dotnet_diagnostic.IDE0037.severity = suggestion
dotnet_diagnostic.IDE0052.severity = suggestion
dotnet_diagnostic.IDE0056.severity = suggestion
dotnet_diagnostic.IDE0057.severity = suggestion
dotnet_diagnostic.IDE0060.severity = suggestion
dotnet_diagnostic.IDE0150.severity = suggestion

dotnet_diagnostic.S1135.severity = suggestion

# ===============================================================================================================================
#  none : 규칙은 전혀 표시되지 않습니다.
# ===============================================================================================================================
dotnet_diagnostic.IDE0001.severity = none
dotnet_diagnostic.IDE0002.severity = none
dotnet_diagnostic.IDE0003.severity = none
dotnet_diagnostic.IDE0004.severity = none
dotnet_diagnostic.IDE0008.severity = none
dotnet_diagnostic.IDE0009.severity = none
dotnet_diagnostic.IDE0010.severity = none
dotnet_diagnostic.IDE0020.severity = none
dotnet_diagnostic.IDE0032.severity = none
dotnet_diagnostic.IDE0038.severity = none
dotnet_diagnostic.IDE0044.severity = none
dotnet_diagnostic.IDE0045.severity = none
dotnet_diagnostic.IDE0046.severity = none
dotnet_diagnostic.IDE0047.severity = none
dotnet_diagnostic.IDE0048.severity = none
dotnet_diagnostic.IDE0054.severity = none
dotnet_diagnostic.IDE0058.severity = none
dotnet_diagnostic.IDE0059.severity = none
dotnet_diagnostic.IDE0062.severity = none
dotnet_diagnostic.IDE0064.severity = none
dotnet_diagnostic.IDE0074.severity = none
dotnet_diagnostic.IDE0078.severity = none
dotnet_diagnostic.IDE0079.severity = none
dotnet_diagnostic.IDE0082.severity = none
dotnet_diagnostic.IDE0084.severity = none
dotnet_diagnostic.IDE0100.severity = none
dotnet_diagnostic.IDE0110.severity = none
dotnet_diagnostic.IDE0120.severity = none
dotnet_diagnostic.IDE0130.severity = none
dotnet_diagnostic.IDE0140.severity = none
dotnet_diagnostic.IDE0170.severity = none
dotnet_diagnostic.IDE0210.severity = none
dotnet_diagnostic.IDE0211.severity = none
dotnet_diagnostic.IDE0230.severity = none
dotnet_diagnostic.IDE0240.severity = none
dotnet_diagnostic.IDE0241.severity = none
dotnet_diagnostic.IDE0251.severity = none
dotnet_diagnostic.IDE0260.severity = none
dotnet_diagnostic.IDE0270.severity = none

dotnet_diagnostic.CA1014.severity = none
dotnet_diagnostic.CA1032.severity = none
dotnet_diagnostic.CA1054.severity = none
dotnet_diagnostic.CA1062.severity = none
dotnet_diagnostic.CA1707.severity = none
dotnet_diagnostic.CA1812.severity = none
dotnet_diagnostic.CA1822.severity = none
dotnet_diagnostic.CA2007.severity = none

dotnet_diagnostic.S101.severity = none
dotnet_diagnostic.S112.severity = none
dotnet_diagnostic.S125.severity = none
dotnet_diagnostic.S1075.severity = none
dotnet_diagnostic.S1104.severity = none
dotnet_diagnostic.S1118.severity = none
dotnet_diagnostic.S1125.severity = none
dotnet_diagnostic.S1215.severity = none
dotnet_diagnostic.S1848.severity = none
dotnet_diagnostic.S2190.severity = none
dotnet_diagnostic.S2223.severity = none
dotnet_diagnostic.S2234.severity = none
dotnet_diagnostic.S2259.severity = none
dotnet_diagnostic.S2445.severity = none
dotnet_diagnostic.S2583.severity = none
dotnet_diagnostic.S2589.severity = none
dotnet_diagnostic.S2696.severity = none
dotnet_diagnostic.S2743.severity = none
dotnet_diagnostic.S3011.severity = none
dotnet_diagnostic.S3246.severity = none
dotnet_diagnostic.S3358.severity = none
dotnet_diagnostic.S3984.severity = none
dotnet_diagnostic.S4158.severity = none

dotnet_diagnostic.UNT0022.severity = none

csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent